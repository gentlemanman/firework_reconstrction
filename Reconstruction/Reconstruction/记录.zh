2019 / 4 / 24 更新
一、整体程序执行流程
1.读入深度图和原始图完成重建;
2.对每一帧重建的结果进行插值，包括位置和颜色;
3.开辟一个新线程，将插值后的所有位置和颜色写入文件;
4.将每一帧的位置和颜色读入buffer，执行渲染循环;

二、查看重建效果需要修改的一些位置, 主要集中在utils.h中
0.shape: 重建当前的形状，不同的形状将会有不同的文件路径，在utils.h中;
1.Radius：寻找当前点的待插值点的半径，在process_point.h中;
2.是否插值，单纯查看重建效果就不需要插值，注释掉插值函数即可;
3.是否写文件，查看重建效果和插值的效果不需要写文件操作，注释掉写文件的函数即可;
4.point_scale : 重建shape2时，需要修改一下保证达到较好的效果，在utils.h中;
	shape1 : point_scale(0.1f, 0.1f, 0.1f);


2019/5/27
1.使用估计出来的深度图进行重建；
2.对估计出来的深度图执行了均值滤波；
3.查看视频效果。